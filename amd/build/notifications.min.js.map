{"version":3,"sources":["../src/notifications.js"],"names":["define","$","notification","callNoti","data","hasOwnProperty","console","log","type","addNotification","storeMsg","sessionStorage","setItem","success","msg","showMsg","getItem","message","removeItem"],"mappings":"AAAAA,OAAM,iCAAC,CAAC,QAAD,CAAW,mBAAX,CAAD,CAAkC,SAASC,CAAT,CAAYC,CAAZ,CAA0B,CAC9D,aAEA,MAAO,CAaHC,QAAQ,CAAE,kBAASC,CAAT,CAAe,CACrB,GAAI,CAACA,CAAI,CAACC,cAAL,CAAoB,SAApB,CAAL,CAAqC,CACjCC,OAAO,CAACC,GAAR,CAAY,iEAAZ,CACH,CACD,GAAI,CAACH,CAAI,CAACC,cAAL,CAAoB,MAApB,CAAL,CAAkC,CAE9BD,CAAI,CAACI,IAAL,CAAY,MACf,CACDN,CAAY,CAACO,eAAb,CAA6BL,CAA7B,CACH,CAtBE,CA6BHM,QAAQ,CAAE,kBAASN,CAAT,CAAe,CAErBO,cAAc,CAACC,OAAf,CAAuB,qBAAvB,CAA8CR,CAAI,CAACS,OAAnD,EACAF,cAAc,CAACC,OAAf,CAAuB,iBAAvB,CAA0CR,CAAI,CAACU,GAA/C,CACH,CAjCE,CAuCHC,OAAO,CAAE,kBAAW,CAEhB,GAAIJ,cAAc,CAACK,OAAf,CAAuB,iBAAvB,CAAJ,CAA+C,CAC3C,KAAKb,QAAL,CAAc,CACVc,OAAO,CAAEN,cAAc,CAACK,OAAf,CAAuB,iBAAvB,CADC,CAEVR,IAAI,CAAEG,cAAc,CAACK,OAAf,CAAuB,qBAAvB,CAFI,CAAd,EAKAL,cAAc,CAACO,UAAf,CAA0B,iBAA1B,EACAP,cAAc,CAACO,UAAf,CAA0B,qBAA1B,CACH,CACJ,CAlDE,CAoDV,CAvDK,CAAN","sourcesContent":["define(['jquery', 'core/notification'], function($, notification) {\n    'use strict';\n\n    return {\n\n        /**\n         * A simple way to call the Moodle core notification system.\n         * Type can be either: success, warning, info, error\n         *  Example:\n         *  noti.callNoti({\n         *      message: \"This is a success test\",\n         *      type: \"success\"\n         *  });\n         * @param {obj} A simple object with the 'message' and 'type' of notification.\n         * @return void\n         */\n        callNoti: function(data) {\n            if (!data.hasOwnProperty('message')) {\n                console.log(\"ERROR -> Notification was called but with no message, aborting.\");\n            }\n            if (!data.hasOwnProperty('type')) {\n                // default to info\n                data.type = \"info\";\n            }\n            notification.addNotification(data);\n        },\n        /**\n         * Store the reponse object to showcase a message after reload.\n         * @param {obj} Server Response {'success', 'data', 'msg'}\n         *\n         * @return void\n         */\n        storeMsg: function(data) {\n            // Save data to sessionStorage\n            sessionStorage.setItem('sent_delete_success', data.success);\n            sessionStorage.setItem('sent_delete_msg', data.msg);\n        },\n        /**\n         *  If a message is stored then show the notification and remove it.\n         * @param void\n         * @return void\n         */\n        showMsg: function() {\n            // Save data to sessionStorage\n            if (sessionStorage.getItem('sent_delete_msg')) {\n                this.callNoti({\n                    message: sessionStorage.getItem('sent_delete_msg'),\n                    type: sessionStorage.getItem('sent_delete_success')\n                });\n                // Remove saved data from sessionStorage\n                sessionStorage.removeItem('sent_delete_msg');\n                sessionStorage.removeItem('sent_delete_success');\n            }\n        }\n    };\n});"],"file":"notifications.min.js"}